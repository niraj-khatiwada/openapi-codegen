// This file is auto-generated by @hey-api/openapi-ts

export const HealthCheckDtoSchema = {
  type: "object",
  properties: {
    status: {
      type: "object",
    },
    details: {
      type: "object",
    },
  },
  required: ["status", "details"],
} as const;

export const ErrorDetailDtoSchema = {
  type: "object",
  properties: {
    property: {
      type: "string",
    },
    code: {
      type: "string",
    },
    message: {
      type: "string",
    },
  },
  required: ["code", "message"],
} as const;

export const ErrorDtoSchema = {
  type: "object",
  properties: {
    statusCode: {
      type: "number",
    },
    error: {
      type: "string",
    },
    message: {
      type: "string",
    },
    errorCode: {
      type: "string",
    },
    details: {
      type: "array",
      items: {
        $ref: "#/components/schemas/ErrorDetailDto",
      },
    },
  },
  required: ["statusCode", "error", "message"],
} as const;

export const LoginReqDtoSchema = {
  type: "object",
  properties: {
    email: {
      type: "string",
      toLowerCase: true,
    },
    password: {
      type: "string",
      minLength: 6,
    },
  },
  required: ["email", "password"],
} as const;

export const LoginResDtoSchema = {
  type: "object",
  properties: {
    userId: {
      type: "string",
    },
    accessToken: {
      type: "string",
    },
    refreshToken: {
      type: "string",
    },
    tokenExpires: {
      type: "number",
    },
  },
  required: ["userId", "accessToken", "refreshToken", "tokenExpires"],
} as const;

export const RegisterReqDtoSchema = {
  type: "object",
  properties: {
    username: {
      type: "string",
    },
    email: {
      type: "string",
      toLowerCase: true,
    },
    password: {
      type: "string",
      minLength: 6,
    },
  },
  required: ["username", "email", "password"],
} as const;

export const UserDtoSchema = {
  type: "object",
  properties: {
    id: {
      type: "string",
    },
    role: {
      type: "string",
      enum: ["User", "Admin"],
    },
    username: {
      type: "string",
    },
    email: {
      type: "string",
    },
    createdAt: {
      format: "date-time",
      type: "string",
    },
    updatedAt: {
      format: "date-time",
      type: "string",
    },
    bio: {
      type: "string",
    },
  },
  required: ["id", "role", "username", "email", "createdAt", "updatedAt"],
} as const;

export const CreateUserDtoSchema = {
  type: "object",
  properties: {
    username: {
      type: "string",
      minLength: 3,
      maxLength: 30,
      toLowerCase: true,
    },
    email: {
      type: "string",
      toLowerCase: true,
    },
    password: {
      type: "string",
      minLength: 6,
    },
    bio: {
      type: "string",
    },
  },
  required: ["username", "email", "password"],
} as const;

export const OffsetPaginationDtoSchema = {
  type: "object",
  properties: {
    limit: {
      type: "number",
    },
    currentPage: {
      type: "number",
    },
    nextPage: {
      type: "number",
    },
    previousPage: {
      type: "number",
    },
    totalRecords: {
      type: "number",
    },
    totalPages: {
      type: "number",
    },
  },
  required: [
    "limit",
    "currentPage",
    "nextPage",
    "previousPage",
    "totalRecords",
    "totalPages",
  ],
} as const;

export const OffsetPaginatedDtoSchema = {
  type: "object",
  properties: {
    data: {
      type: "array",
      items: {
        type: "object",
      },
    },
    pagination: {
      $ref: "#/components/schemas/OffsetPaginationDto",
    },
  },
  required: ["data", "pagination"],
} as const;

export const CursorPaginationDtoSchema = {
  type: "object",
  properties: {
    limit: {
      type: "number",
    },
    afterCursor: {
      type: "string",
    },
    beforeCursor: {
      type: "string",
    },
    totalRecords: {
      type: "number",
    },
  },
  required: ["limit", "afterCursor", "beforeCursor", "totalRecords"],
} as const;

export const CursorPaginatedDtoSchema = {
  type: "object",
  properties: {
    data: {
      type: "array",
      items: {
        type: "object",
      },
    },
    pagination: {
      $ref: "#/components/schemas/CursorPaginationDto",
    },
  },
  required: ["data", "pagination"],
} as const;

export const UpdateUserDtoSchema = {
  type: "object",
  properties: {
    bio: {
      type: "string",
    },
  },
} as const;
